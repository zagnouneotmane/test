on:
  push:
  
jobs:
  deploy-runner:
    runs-on: ubuntu-latest
    environment: cloud
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: iterative/setup-cml@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::175754385727:role/SandboxUser
      - name: cml runner
        env:
          # set these secrets via gh CLI or UI. See also:
          # https://cml.dev/doc/self-hosted-runners?tab=GitHub#personal-access-token
          REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          cml runner \
              --cloud=aws \
              --cloud-region=us-east-1 \
              --cloud-type=t2.large \
              --cloud-userdata="#!/bin/bash
              mkdir -p actions-runner && cd actions-runner
              mkdir -p _work/_temp
              mkdir -p _work/_tool
              wget https://github.com/actions/python-versions/releases/download/3.9.18-5997508477/python-3.9.18-linux-22.04-x64.tar.gz
              tar xzf python-3.9.18-linux-22.04-x64.tar.gz -C  _work/_temp/
              cd _work/_temp/
              
              export LD_LIBRARY_PATH=/home/ubuntu/actions-runner/_work/_tool/Python/3.9.18/x64/lib:/Python/3.9.18/x64/lib:$LD_LIBRARY_PATH
              
              PYTHON_FULL_VERSION="3.9.18"
              MAJOR_VERSION=$(echo $PYTHON_FULL_VERSION | cut -d '.' -f 1)
              MINOR_VERSION=$(echo $PYTHON_FULL_VERSION | cut -d '.' -f 2)
              
              PYTHON_MAJOR=python$MAJOR_VERSION
              PYTHON_MAJOR_DOT_MINOR=python$MAJOR_VERSION.$MINOR_VERSION
              PYTHON_MAJORMINOR=python$MAJOR_VERSION$MINOR_VERSION
              
              AGENT_TOOLSDIRECTORY="/home/ubuntu/actions-runner/_work/_tool"
              if [ -z ${AGENT_TOOLSDIRECTORY+x} ]; then
                # No AGENT_TOOLSDIRECTORY on GitHub images
                TOOLCACHE_ROOT=$RUNNER_TOOL_CACHE
              else
                TOOLCACHE_ROOT=$AGENT_TOOLSDIRECTORY
              fi
              
              PYTHON_TOOLCACHE_PATH=$TOOLCACHE_ROOT/Python
              PYTHON_TOOLCACHE_VERSION_PATH=$PYTHON_TOOLCACHE_PATH/$PYTHON_FULL_VERSION
              PYTHON_TOOLCACHE_VERSION_ARCH_PATH=$PYTHON_TOOLCACHE_VERSION_PATH/x64
              
              echo "Check if Python hostedtoolcache folder exist..."
              if [ ! -d $PYTHON_TOOLCACHE_PATH ]; then
                echo "Creating Python hostedtoolcache folder..."
                mkdir -p $PYTHON_TOOLCACHE_PATH
              elif [ -d $PYTHON_TOOLCACHE_VERSION_PATH ]; then
                echo "Deleting Python $PYTHON_FULL_VERSION"
                rm -rf $PYTHON_TOOLCACHE_VERSION_PATH
              fi
              
              echo "Create Python $PYTHON_FULL_VERSION folder"
              mkdir -p $PYTHON_TOOLCACHE_VERSION_ARCH_PATH
              
              echo "Copy Python binaries to hostedtoolcache folder"
              cp -R ./* $PYTHON_TOOLCACHE_VERSION_ARCH_PATH
              rm $PYTHON_TOOLCACHE_VERSION_ARCH_PATH/setup.sh
              
              cd $PYTHON_TOOLCACHE_VERSION_ARCH_PATH
              
              echo "Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)"
              ln -s ./bin/$PYTHON_MAJOR_DOT_MINOR python
              
              cd bin/
              ln -s $PYTHON_MAJOR_DOT_MINOR $PYTHON_MAJORMINOR
              if [ ! -f python ]; then
                ln -s $PYTHON_MAJOR_DOT_MINOR python
              fi
              
              chmod +x ../python $PYTHON_MAJOR $PYTHON_MAJOR_DOT_MINOR $PYTHON_MAJORMINOR python
              
              echo "Upgrading pip..."
              ./python -m ensurepip
              ./python -m pip install --ignore-installed pip --disable-pip-version-check --no-warn-script-location --root-user-action=ignore
              
              echo "Create complete file"
              touch $PYTHON_TOOLCACHE_VERSION_PATH/x64.complete" \
              --labels=cml-runner
